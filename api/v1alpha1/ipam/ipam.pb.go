// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.19.4
// source: v1alpha1/ipam/ipam.proto

package ipam

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EnumIPVersion int32

const (
	EnumIPVersion_IPv4 EnumIPVersion = 0
	EnumIPVersion_IPv6 EnumIPVersion = 1
)

// Enum value maps for EnumIPVersion.
var (
	EnumIPVersion_name = map[int32]string{
		0: "IPv4",
		1: "IPv6",
	}
	EnumIPVersion_value = map[string]int32{
		"IPv4": 0,
		"IPv6": 1,
	}
)

func (x EnumIPVersion) Enum() *EnumIPVersion {
	p := new(EnumIPVersion)
	*p = x
	return p
}

func (x EnumIPVersion) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EnumIPVersion) Descriptor() protoreflect.EnumDescriptor {
	return file_v1alpha1_ipam_ipam_proto_enumTypes[0].Descriptor()
}

func (EnumIPVersion) Type() protoreflect.EnumType {
	return &file_v1alpha1_ipam_ipam_proto_enumTypes[0]
}

func (x EnumIPVersion) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EnumIPVersion.Descriptor instead.
func (EnumIPVersion) EnumDescriptor() ([]byte, []int) {
	return file_v1alpha1_ipam_ipam_proto_rawDescGZIP(), []int{0}
}

type AllocateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// container ID
	ContainerID string `protobuf:"bytes,1,opt,name=ContainerID,proto3" json:"ContainerID,omitempty"`
	// if name
	IfName string `protobuf:"bytes,2,opt,name=IfName,proto3" json:"IfName,omitempty"`
	// net namespace
	NetNamespace string `protobuf:"bytes,3,opt,name=NetNamespace,proto3" json:"NetNamespace,omitempty"`
	// default ip subnet
	DefaultSubnet string `protobuf:"bytes,4,opt,name=DefaultSubnet,proto3" json:"DefaultSubnet,omitempty"`
	// pod name
	PodName string `protobuf:"bytes,5,opt,name=PodName,proto3" json:"PodName,omitempty"`
	// pod namespace
	PodNamespace string `protobuf:"bytes,6,opt,name=PodNamespace,proto3" json:"PodNamespace,omitempty"`
	// pod UID
	PodUID string `protobuf:"bytes,7,opt,name=PodUID,proto3" json:"PodUID,omitempty"`
}

func (x *AllocateRequest) Reset() {
	*x = AllocateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1alpha1_ipam_ipam_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllocateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllocateRequest) ProtoMessage() {}

func (x *AllocateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1alpha1_ipam_ipam_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllocateRequest.ProtoReflect.Descriptor instead.
func (*AllocateRequest) Descriptor() ([]byte, []int) {
	return file_v1alpha1_ipam_ipam_proto_rawDescGZIP(), []int{0}
}

func (x *AllocateRequest) GetContainerID() string {
	if x != nil {
		return x.ContainerID
	}
	return ""
}

func (x *AllocateRequest) GetIfName() string {
	if x != nil {
		return x.IfName
	}
	return ""
}

func (x *AllocateRequest) GetNetNamespace() string {
	if x != nil {
		return x.NetNamespace
	}
	return ""
}

func (x *AllocateRequest) GetDefaultSubnet() string {
	if x != nil {
		return x.DefaultSubnet
	}
	return ""
}

func (x *AllocateRequest) GetPodName() string {
	if x != nil {
		return x.PodName
	}
	return ""
}

func (x *AllocateRequest) GetPodNamespace() string {
	if x != nil {
		return x.PodNamespace
	}
	return ""
}

func (x *AllocateRequest) GetPodUID() string {
	if x != nil {
		return x.PodUID
	}
	return ""
}

type AllocateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ips
	IPs []*IPConfig `protobuf:"bytes,1,rep,name=IPs,proto3" json:"IPs,omitempty"`
	// routes
	Routes []*Route `protobuf:"bytes,2,rep,name=Routes,proto3" json:"Routes,omitempty"`
	// DNS
	DNS *DNS `protobuf:"bytes,3,opt,name=DNS,proto3" json:"DNS,omitempty"`
}

func (x *AllocateReply) Reset() {
	*x = AllocateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1alpha1_ipam_ipam_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllocateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllocateReply) ProtoMessage() {}

func (x *AllocateReply) ProtoReflect() protoreflect.Message {
	mi := &file_v1alpha1_ipam_ipam_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllocateReply.ProtoReflect.Descriptor instead.
func (*AllocateReply) Descriptor() ([]byte, []int) {
	return file_v1alpha1_ipam_ipam_proto_rawDescGZIP(), []int{1}
}

func (x *AllocateReply) GetIPs() []*IPConfig {
	if x != nil {
		return x.IPs
	}
	return nil
}

func (x *AllocateReply) GetRoutes() []*Route {
	if x != nil {
		return x.Routes
	}
	return nil
}

func (x *AllocateReply) GetDNS() *DNS {
	if x != nil {
		return x.DNS
	}
	return nil
}

type IPConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// address
	Address string `protobuf:"bytes,1,opt,name=Address,proto3" json:"Address,omitempty"` // string Address = 1 [(validate.rules).string = {min_len: 1}];
	// nic
	Nic string `protobuf:"bytes,2,opt,name=Nic,proto3" json:"Nic,omitempty"` // string Nic = 2 [(validate.rules).string = {min_len: 1}];
	// version
	Version EnumIPVersion `protobuf:"varint,3,opt,name=version,proto3,enum=v1alpha1.ipam.EnumIPVersion" json:"version,omitempty"`
}

func (x *IPConfig) Reset() {
	*x = IPConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1alpha1_ipam_ipam_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IPConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IPConfig) ProtoMessage() {}

func (x *IPConfig) ProtoReflect() protoreflect.Message {
	mi := &file_v1alpha1_ipam_ipam_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IPConfig.ProtoReflect.Descriptor instead.
func (*IPConfig) Descriptor() ([]byte, []int) {
	return file_v1alpha1_ipam_ipam_proto_rawDescGZIP(), []int{2}
}

func (x *IPConfig) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *IPConfig) GetNic() string {
	if x != nil {
		return x.Nic
	}
	return ""
}

func (x *IPConfig) GetVersion() EnumIPVersion {
	if x != nil {
		return x.Version
	}
	return EnumIPVersion_IPv4
}

type Route struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// dst
	Dst string `protobuf:"bytes,1,opt,name=Dst,proto3" json:"Dst,omitempty"`
	// gw
	Gw string `protobuf:"bytes,2,opt,name=Gw,proto3" json:"Gw,omitempty"`
	// if name
	IfName string `protobuf:"bytes,3,opt,name=IfName,proto3" json:"IfName,omitempty"`
}

func (x *Route) Reset() {
	*x = Route{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1alpha1_ipam_ipam_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Route) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Route) ProtoMessage() {}

func (x *Route) ProtoReflect() protoreflect.Message {
	mi := &file_v1alpha1_ipam_ipam_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Route.ProtoReflect.Descriptor instead.
func (*Route) Descriptor() ([]byte, []int) {
	return file_v1alpha1_ipam_ipam_proto_rawDescGZIP(), []int{3}
}

func (x *Route) GetDst() string {
	if x != nil {
		return x.Dst
	}
	return ""
}

func (x *Route) GetGw() string {
	if x != nil {
		return x.Gw
	}
	return ""
}

func (x *Route) GetIfName() string {
	if x != nil {
		return x.IfName
	}
	return ""
}

type DNS struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// domain
	Domain string `protobuf:"bytes,1,opt,name=Domain,proto3" json:"Domain,omitempty"`
	// nameservers
	Nameservers []string `protobuf:"bytes,2,rep,name=Nameservers,proto3" json:"Nameservers,omitempty"`
	// options
	Options []string `protobuf:"bytes,3,rep,name=Options,proto3" json:"Options,omitempty"`
	// search
	Search []string `protobuf:"bytes,4,rep,name=Search,proto3" json:"Search,omitempty"`
}

func (x *DNS) Reset() {
	*x = DNS{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1alpha1_ipam_ipam_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DNS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DNS) ProtoMessage() {}

func (x *DNS) ProtoReflect() protoreflect.Message {
	mi := &file_v1alpha1_ipam_ipam_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DNS.ProtoReflect.Descriptor instead.
func (*DNS) Descriptor() ([]byte, []int) {
	return file_v1alpha1_ipam_ipam_proto_rawDescGZIP(), []int{4}
}

func (x *DNS) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *DNS) GetNameservers() []string {
	if x != nil {
		return x.Nameservers
	}
	return nil
}

func (x *DNS) GetOptions() []string {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *DNS) GetSearch() []string {
	if x != nil {
		return x.Search
	}
	return nil
}

type ReleaseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// container ID
	ContainerID string `protobuf:"bytes,1,opt,name=ContainerID,proto3" json:"ContainerID,omitempty"`
	// if name
	IfName string `protobuf:"bytes,2,opt,name=IfName,proto3" json:"IfName,omitempty"`
	// net namespace
	NetNamespace string `protobuf:"bytes,3,opt,name=NetNamespace,proto3" json:"NetNamespace,omitempty"`
	// pod name
	PodName string `protobuf:"bytes,4,opt,name=PodName,proto3" json:"PodName,omitempty"`
	// pod namespace
	PodNamespace string `protobuf:"bytes,5,opt,name=PodNamespace,proto3" json:"PodNamespace,omitempty"`
	// pod UID
	PodUID string `protobuf:"bytes,6,opt,name=PodUID,proto3" json:"PodUID,omitempty"`
}

func (x *ReleaseRequest) Reset() {
	*x = ReleaseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1alpha1_ipam_ipam_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReleaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseRequest) ProtoMessage() {}

func (x *ReleaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1alpha1_ipam_ipam_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseRequest.ProtoReflect.Descriptor instead.
func (*ReleaseRequest) Descriptor() ([]byte, []int) {
	return file_v1alpha1_ipam_ipam_proto_rawDescGZIP(), []int{5}
}

func (x *ReleaseRequest) GetContainerID() string {
	if x != nil {
		return x.ContainerID
	}
	return ""
}

func (x *ReleaseRequest) GetIfName() string {
	if x != nil {
		return x.IfName
	}
	return ""
}

func (x *ReleaseRequest) GetNetNamespace() string {
	if x != nil {
		return x.NetNamespace
	}
	return ""
}

func (x *ReleaseRequest) GetPodName() string {
	if x != nil {
		return x.PodName
	}
	return ""
}

func (x *ReleaseRequest) GetPodNamespace() string {
	if x != nil {
		return x.PodNamespace
	}
	return ""
}

func (x *ReleaseRequest) GetPodUID() string {
	if x != nil {
		return x.PodUID
	}
	return ""
}

type ReleaseReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReleaseReply) Reset() {
	*x = ReleaseReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1alpha1_ipam_ipam_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReleaseReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseReply) ProtoMessage() {}

func (x *ReleaseReply) ProtoReflect() protoreflect.Message {
	mi := &file_v1alpha1_ipam_ipam_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseReply.ProtoReflect.Descriptor instead.
func (*ReleaseReply) Descriptor() ([]byte, []int) {
	return file_v1alpha1_ipam_ipam_proto_rawDescGZIP(), []int{6}
}

var File_v1alpha1_ipam_ipam_proto protoreflect.FileDescriptor

var file_v1alpha1_ipam_ipam_proto_rawDesc = []byte{
	0x0a, 0x18, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x69, 0x70, 0x61, 0x6d, 0x2f,
	0x69, 0x70, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x70, 0x61, 0x6d, 0x1a, 0x23, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xaa,
	0x02, 0x0a, 0x0f, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x29, 0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01,
	0x52, 0x0b, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1f, 0x0a,
	0x06, 0x49, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x06, 0x49, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2b,
	0x0a, 0x0c, 0x4e, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0c, 0x4e,
	0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x2d, 0x0a, 0x0d, 0x44,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x53, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0d, 0x44, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x53, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x12, 0x21, 0x0a, 0x07, 0x50, 0x6f,
	0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x72, 0x02, 0x10, 0x01, 0x52, 0x07, 0x50, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2b, 0x0a,
	0x0c, 0x50, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0c, 0x50, 0x6f,
	0x64, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x06, 0x50, 0x6f,
	0x64, 0x55, 0x49, 0x44, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72,
	0x02, 0x10, 0x01, 0x52, 0x06, 0x50, 0x6f, 0x64, 0x55, 0x49, 0x44, 0x22, 0x8e, 0x01, 0x0a, 0x0d,
	0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x29, 0x0a,
	0x03, 0x49, 0x50, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x70, 0x61, 0x6d, 0x2e, 0x49, 0x50, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x03, 0x49, 0x50, 0x73, 0x12, 0x2c, 0x0a, 0x06, 0x52, 0x6f, 0x75, 0x74,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x69, 0x70, 0x61, 0x6d, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x06,
	0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x12, 0x24, 0x0a, 0x03, 0x44, 0x4e, 0x53, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69,
	0x70, 0x61, 0x6d, 0x2e, 0x44, 0x4e, 0x53, 0x52, 0x03, 0x44, 0x4e, 0x53, 0x22, 0x6e, 0x0a, 0x08,
	0x49, 0x50, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x4e, 0x69, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x4e, 0x69, 0x63, 0x12, 0x36, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x69, 0x70, 0x61, 0x6d, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x49, 0x50, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x41, 0x0a, 0x05,
	0x52, 0x6f, 0x75, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x44, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x44, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x47, 0x77, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x47, 0x77, 0x12, 0x16, 0x0a, 0x06, 0x49, 0x66, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x49, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x22,
	0x71, 0x0a, 0x03, 0x44, 0x4e, 0x53, 0x12, 0x16, 0x0a, 0x06, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x20,
	0x0a, 0x0b, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0b, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x07, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x22, 0xf1, 0x01, 0x0a, 0x0e, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72,
	0x02, 0x10, 0x01, 0x52, 0x0b, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x44,
	0x12, 0x1f, 0x0a, 0x06, 0x49, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x06, 0x49, 0x66, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x22, 0x0a, 0x0c, 0x4e, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x4e, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x07, 0x50, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52,
	0x07, 0x50, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2b, 0x0a, 0x0c, 0x50, 0x6f, 0x64, 0x4e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0c, 0x50, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x06, 0x50, 0x6f, 0x64, 0x55, 0x49, 0x44, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x06,
	0x50, 0x6f, 0x64, 0x55, 0x49, 0x44, 0x22, 0x0e, 0x0a, 0x0c, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73,
	0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2a, 0x23, 0x0a, 0x0d, 0x45, 0x6e, 0x75, 0x6d, 0x49, 0x50,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x08, 0x0a, 0x04, 0x49, 0x50, 0x76, 0x34, 0x10,
	0x00, 0x12, 0x08, 0x0a, 0x04, 0x49, 0x50, 0x76, 0x36, 0x10, 0x01, 0x32, 0x9b, 0x01, 0x0a, 0x04,
	0x49, 0x70, 0x61, 0x6d, 0x12, 0x4a, 0x0a, 0x08, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65,
	0x12, 0x1e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x70, 0x61, 0x6d,
	0x2e, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1c, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x70, 0x61, 0x6d,
	0x2e, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00,
	0x12, 0x47, 0x0a, 0x07, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x12, 0x1d, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x70, 0x61, 0x6d, 0x2e, 0x52, 0x65, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x70, 0x61, 0x6d, 0x2e, 0x52, 0x65, 0x6c, 0x65, 0x61,
	0x73, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x42, 0x0f, 0x5a, 0x0d, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x69, 0x70, 0x61, 0x6d, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_v1alpha1_ipam_ipam_proto_rawDescOnce sync.Once
	file_v1alpha1_ipam_ipam_proto_rawDescData = file_v1alpha1_ipam_ipam_proto_rawDesc
)

func file_v1alpha1_ipam_ipam_proto_rawDescGZIP() []byte {
	file_v1alpha1_ipam_ipam_proto_rawDescOnce.Do(func() {
		file_v1alpha1_ipam_ipam_proto_rawDescData = protoimpl.X.CompressGZIP(file_v1alpha1_ipam_ipam_proto_rawDescData)
	})
	return file_v1alpha1_ipam_ipam_proto_rawDescData
}

var file_v1alpha1_ipam_ipam_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_v1alpha1_ipam_ipam_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_v1alpha1_ipam_ipam_proto_goTypes = []interface{}{
	(EnumIPVersion)(0),      // 0: v1alpha1.ipam.EnumIPVersion
	(*AllocateRequest)(nil), // 1: v1alpha1.ipam.AllocateRequest
	(*AllocateReply)(nil),   // 2: v1alpha1.ipam.AllocateReply
	(*IPConfig)(nil),        // 3: v1alpha1.ipam.IPConfig
	(*Route)(nil),           // 4: v1alpha1.ipam.Route
	(*DNS)(nil),             // 5: v1alpha1.ipam.DNS
	(*ReleaseRequest)(nil),  // 6: v1alpha1.ipam.ReleaseRequest
	(*ReleaseReply)(nil),    // 7: v1alpha1.ipam.ReleaseReply
}
var file_v1alpha1_ipam_ipam_proto_depIdxs = []int32{
	3, // 0: v1alpha1.ipam.AllocateReply.IPs:type_name -> v1alpha1.ipam.IPConfig
	4, // 1: v1alpha1.ipam.AllocateReply.Routes:type_name -> v1alpha1.ipam.Route
	5, // 2: v1alpha1.ipam.AllocateReply.DNS:type_name -> v1alpha1.ipam.DNS
	0, // 3: v1alpha1.ipam.IPConfig.version:type_name -> v1alpha1.ipam.EnumIPVersion
	1, // 4: v1alpha1.ipam.Ipam.Allocate:input_type -> v1alpha1.ipam.AllocateRequest
	6, // 5: v1alpha1.ipam.Ipam.Release:input_type -> v1alpha1.ipam.ReleaseRequest
	2, // 6: v1alpha1.ipam.Ipam.Allocate:output_type -> v1alpha1.ipam.AllocateReply
	7, // 7: v1alpha1.ipam.Ipam.Release:output_type -> v1alpha1.ipam.ReleaseReply
	6, // [6:8] is the sub-list for method output_type
	4, // [4:6] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_v1alpha1_ipam_ipam_proto_init() }
func file_v1alpha1_ipam_ipam_proto_init() {
	if File_v1alpha1_ipam_ipam_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_v1alpha1_ipam_ipam_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllocateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1alpha1_ipam_ipam_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllocateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1alpha1_ipam_ipam_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IPConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1alpha1_ipam_ipam_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Route); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1alpha1_ipam_ipam_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DNS); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1alpha1_ipam_ipam_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReleaseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1alpha1_ipam_ipam_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReleaseReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_v1alpha1_ipam_ipam_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_v1alpha1_ipam_ipam_proto_goTypes,
		DependencyIndexes: file_v1alpha1_ipam_ipam_proto_depIdxs,
		EnumInfos:         file_v1alpha1_ipam_ipam_proto_enumTypes,
		MessageInfos:      file_v1alpha1_ipam_ipam_proto_msgTypes,
	}.Build()
	File_v1alpha1_ipam_ipam_proto = out.File
	file_v1alpha1_ipam_ipam_proto_rawDesc = nil
	file_v1alpha1_ipam_ipam_proto_goTypes = nil
	file_v1alpha1_ipam_ipam_proto_depIdxs = nil
}
